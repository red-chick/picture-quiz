{"version":3,"sources":["quiz/assets/data/people.ts","quiz/assets/images/people/irin.jpg","quiz/assets/images/people/iu.jpg","quiz/assets/images/people/kanghodong.jpg","quiz/assets/images/people/kimdonghyun.jpeg","quiz/hooks/useInterval.ts","quiz/hooks/usePerson.ts","quiz/utils/index.ts","quiz/hooks/useRecognizer.ts","quiz/components/QuizPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","quiz/components/QuizPage.module.css","App.module.css"],"names":["people","name","image","useInterval","copyPeople","firstPerson","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","popRandomPerson","min","max","index","length","Math","ceil","floor","random","person","splice","init","JSON","parse","stringify","usePerson","useState","setPerson","console","log","SpeechRecognition","window","webkitSpeechRecognition","recognition","lang","useRecognizer","output","setOutput","onresult","e","results","isFinal","transcript","start","abort","QuizPage","finishGame","count","setCount","successCount","setSuccessCount","nextPerson","startRecognizer","endRecognizer","successName","setSuccessName","isRec","setIsRec","includes","c","className","styles","center","src","alt","App","setStart","startGame","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.49a7f9d3.chunk.js","sourcesContent":["import irin from \"../images/people/irin.jpg\";\nimport iu from \"../images/people/iu.jpg\";\nimport kanghodong from \"../images/people/kanghodong.jpg\";\nimport kimdonghyun from \"../images/people/kimdonghyun.jpeg\";\n\nexport type PersonType = {\n  name: string;\n  image: string;\n};\n\nconst people: PersonType[] = [\n  { name: \"아이린\", image: irin },\n  { name: \"아이유\", image: iu },\n  { name: \"강호동\", image: kanghodong },\n  { name: \"김동현\", image: kimdonghyun },\n];\n\nexport default people;\n","export default __webpack_public_path__ + \"static/media/irin.5b81e766.jpg\";","export default __webpack_public_path__ + \"static/media/iu.f376f7d1.jpg\";","export default __webpack_public_path__ + \"static/media/kanghodong.998fc4d5.jpg\";","export default __webpack_public_path__ + \"static/media/kimdonghyun.11b9723b.jpeg\";","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback: Function, delay: number) {\n  const savedCallback = useRef<Function>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      if (savedCallback.current) savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","import { useEffect, useState } from \"react\";\nimport people, { PersonType } from \"../assets/data/people\";\nimport { random } from \"../utils\";\n\nlet copyPeople: PersonType[];\nlet firstPerson: PersonType;\n\nconst popRandomPerson = (): PersonType => {\n  const index = random(0, copyPeople.length);\n  const person = { ...copyPeople[index] };\n  copyPeople.splice(index, 1);\n  return person;\n};\n\nconst init = () => {\n  copyPeople = JSON.parse(JSON.stringify(people));\n  firstPerson = popRandomPerson();\n};\n\ninit();\n\nconst usePerson = (): [PersonType, () => void] => {\n  const [person, setPerson] = useState(firstPerson);\n  console.log(\"person\", person);\n  const nextPerson = () => {\n    setPerson(popRandomPerson());\n  };\n\n  useEffect(() => {\n    return init;\n  }, []);\n\n  return [person, nextPerson];\n};\n\nexport default usePerson;\n","export const random = (min: number, max: number) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n};\n","import { useEffect, useState } from \"react\";\n\ndeclare global {\n  interface Window {\n    webkitSpeechRecognition: SpeechRecognition;\n  }\n}\n\nconst SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition;\n\nconst recognition = SpeechRecognition\n  ? new SpeechRecognition()\n  : ({} as SpeechRecognition);\nrecognition.lang = \"ko-KR\";\n\nconst useRecognizer = (): [string, () => void, () => void] => {\n  const [output, setOutput] = useState(\"\");\n\n  useEffect(() => {\n    recognition.onresult = (e) => {\n      if (e.results[e.results.length - 1].isFinal) {\n        setOutput(e.results[e.results.length - 1][0].transcript);\n      }\n    };\n  }, []);\n\n  const startRecognizer = () => {\n    recognition.start();\n  };\n\n  const endRecognizer = () => {\n    recognition.abort();\n    setOutput(\"\");\n  };\n\n  return [output, startRecognizer, endRecognizer];\n};\n\nexport default useRecognizer;\n","import { useEffect, useState } from \"react\";\nimport people from \"../assets/data/people\";\nimport useInterval from \"../hooks/useInterval\";\nimport usePerson from \"../hooks/usePerson\";\nimport useRecognizer from \"../hooks/useRecognizer\";\n\nimport styles from \"./QuizPage.module.css\";\n\ntype Props = {\n  finishGame: Function;\n};\n\nconst QuizPage = ({ finishGame }: Props) => {\n  const [count, setCount] = useState(3);\n  const [successCount, setSuccessCount] = useState(0);\n  const [person, nextPerson] = usePerson();\n  const [output, startRecognizer, endRecognizer] = useRecognizer();\n  const [successName, setSuccessName] = useState(\"\");\n  const [isRec, setIsRec] = useState(false);\n\n  useEffect(() => {\n    if (successCount === people.length) finishGame(successCount);\n  }, [successCount, finishGame]);\n\n  useInterval(() => {\n    if (count >= 0) setCount(count - 1);\n  }, 1000);\n\n  useEffect(() => {\n    if (count === 0) {\n      if (isRec) {\n        endRecognizer();\n        finishGame(successCount);\n      } else {\n        startRecognizer();\n        setIsRec(true);\n        setCount(5);\n      }\n    }\n  }, [\n    count,\n    isRec,\n    successCount,\n    endRecognizer,\n    startRecognizer,\n    setIsRec,\n    setCount,\n    finishGame,\n  ]);\n\n  useEffect(() => {\n    if (output) {\n      endRecognizer();\n      setIsRec(false);\n      if (output.includes(person.name)) {\n        setCount(5);\n        setSuccessCount((c) => c + 1);\n        setSuccessName(person.name);\n        nextPerson();\n      } else {\n        finishGame(successCount);\n      }\n    }\n  }, [\n    output,\n    person,\n    successCount,\n    endRecognizer,\n    setCount,\n    setSuccessCount,\n    setSuccessName,\n    nextPerson,\n    finishGame,\n  ]);\n\n  if (isRec) {\n    return (\n      <div className={styles.QuizPage}>\n        {count > 1 && <span className={styles.center}>{count - 2}</span>}\n        <img src={person.image} alt=\"인물퀴즈\" />\n      </div>\n    );\n  }\n\n  if (count > 3) {\n    return <div className={styles.QuizPage}>{successName} 정답!</div>;\n  }\n\n  return <div className={styles.QuizPage}>{count}</div>;\n};\n\nexport default QuizPage;\n","import styles from \"./App.module.css\";\nimport { useState } from \"react\";\nimport QuizPage from \"./quiz/components/QuizPage\";\nimport people from \"./quiz/assets/data/people\";\n\nconst App: React.FC = () => {\n  const [start, setStart] = useState(false);\n  const [successCount, setSuccessCount] = useState(-1);\n\n  const finishGame = (count: number) => {\n    setStart(false);\n    setSuccessCount(count);\n  };\n\n  const startGame = () => {\n    setStart(true);\n    setSuccessCount(-1);\n  };\n\n  if (start) return <QuizPage finishGame={finishGame} />;\n\n  if (successCount === people.length) {\n    return (\n      <div className={styles.App}>\n        <h1>모든 문제 맞추기 성공!</h1>\n        <button onClick={startGame}>다시 시작</button>\n      </div>\n    );\n  }\n\n  if (successCount >= 0) {\n    return (\n      <div className={styles.App}>\n        <h1>땡! {successCount}개 맞춤!</h1>\n        <button onClick={startGame}>다시 시작</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.App}>\n      <h1>신서유기 인물퀴즈</h1>\n      <button onClick={startGame}>시작하기</button>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition;\n\nif (SpeechRecognition) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n} else {\n  ReactDOM.render(\n    <div>\n      음성 인식이 지원되지 않는 브라우저입니다.\n      <br />\n      데스크톱의 크롬 브라우저로 접속해 주세요.\n    </div>,\n    document.getElementById(\"root\")\n  );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizPage\":\"QuizPage_QuizPage__73kPK\",\"center\":\"QuizPage_center__3R9qK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"grow\":\"App_grow__vmVwo\"};"],"sourceRoot":""}